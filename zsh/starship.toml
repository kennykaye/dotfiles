add_newline = true

format = """
$directory\
$git_branch\
${custom.git_status_dirty}\
${custom.git_status_clean}\
$git_state\
$character"""

right_format = """
$cmd_duration\
$git_status\
$python\
$go\
$node\
$time"""

continuation_prompt = "[❯ ](dimmed white)"

command_timeout = 1000

[directory]
style = "red"
truncation_length = 2
truncate_to_repo = true
truncation_symbol = "⋯/"

[character]
success_symbol = "[❯](green)"
error_symbol = "[❯](red)"
vimcmd_symbol = "[❮](green)"
# success_symbol = "[❯](red)[❯](yellow)[❯](green)"
# error_symbol = "[❯](red)[❯](red)[❯](red)"
# vimcmd_symbol = "[❮](red)[❮](yellow)[❮](green)"

[git_branch]
format = "on [$branch]($style)"
style = "yellow"

[git_status]
format = "[[($conflicted$untracked$modified$staged$renamed$deleted)](218)($ahead_behind$stashed)]($style)"
ahead = "[⇡](yellow)${count} "
behind = "[⇣](yellow)${count} "
diverged = "[⇕⇡${ahead_count}⇣${behind_count}](yellow) "
conflicted = "​"
untracked = "[](white) "
modified = "[󰔷](purple) "
staged = "[](yellow) "
renamed = "[➜](blue) "
deleted = "[](red) "
stashed = "[≡](cyan) "


[custom.git_status_dirty]
when = 'test -n "$(git status --porcelain 2>/dev/null)"'
symbol = "!"
style = "red"
format="[$symbol]($style) "
shell = ["sh"]

[custom.git_status_clean]
when = 'git rev-parse --is-inside-work-tree 2>/dev/null && test -z "$(git status --porcelain 2>/dev/null)"'
symbol = " "
shell = ["sh"]

[git_state]
format = '\⚡ ([$state( $progress_current/$progress_total)]($style)\) '
style = "green"

[cmd_duration]
format = "[$duration]($style) "
style = "bright-black"

[golang]
format = '[ ](bold cyan)'

[nodejs]
symbol = "nodejs "

[java]
symbol = "java "

[python]
symbol = "py "
